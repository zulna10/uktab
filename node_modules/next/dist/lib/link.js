'use strict';

var cov_1gdd8a029j = function () {
  var path = '/Users/NaoyukiKanezawa/github.com/zeit/next.js/lib/link.js',
      hash = '51d59905997d7ac18cae196a05353916da4d80aa',
      global = new Function('return this')(),
      gcv = '__coverage__',
      coverageData = {
    path: '/Users/NaoyukiKanezawa/github.com/zeit/next.js/lib/link.js',
    statementMap: {
      '0': {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 16
        }
      },
      '1': {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 50
        }
      },
      '2': {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 18,
          column: 5
        }
      },
      '3': {
        start: {
          line: 17,
          column: 6
        },
        end: {
          line: 17,
          column: 12
        }
      },
      '4': {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 25,
          column: 5
        }
      },
      '5': {
        start: {
          line: 24,
          column: 6
        },
        end: {
          line: 24,
          column: 12
        }
      },
      '6': {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 22
        }
      },
      '7': {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 37,
          column: 6
        }
      },
      '8': {
        start: {
          line: 32,
          column: 6
        },
        end: {
          line: 32,
          column: 26
        }
      },
      '9': {
        start: {
          line: 32,
          column: 20
        },
        end: {
          line: 32,
          column: 26
        }
      },
      '10': {
        start: {
          line: 33,
          column: 6
        },
        end: {
          line: 33,
          column: 49
        }
      },
      '11': {
        start: {
          line: 33,
          column: 28
        },
        end: {
          line: 33,
          column: 49
        }
      },
      '12': {
        start: {
          line: 36,
          column: 6
        },
        end: {
          line: 36,
          column: 53
        }
      },
      '13': {
        start: {
          line: 36,
          column: 30
        },
        end: {
          line: 36,
          column: 53
        }
      },
      '14': {
        start: {
          line: 50,
          column: 6
        },
        end: {
          line: 52,
          column: 7
        }
      },
      '15': {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 36
        }
      },
      '16': {
        start: {
          line: 54,
          column: 6
        },
        end: {
          line: 58,
          column: 7
        }
      },
      '17': {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 47
        }
      },
      '18': {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 40
        }
      },
      '19': {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 22
        }
      },
      '20': {
        start: {
          line: 67,
          column: 2
        },
        end: {
          line: 68,
          column: 44
        }
      }
    },
    fnMap: {
      '0': {
        name: '(anonymous_0)',
        decl: {
          start: {
            line: 8,
            column: 2
          },
          end: {
            line: 8,
            column: 3
          }
        },
        loc: {
          start: {
            line: 8,
            column: 22
          },
          end: {
            line: 11,
            column: 3
          }
        }
      },
      '1': {
        name: '(anonymous_1)',
        decl: {
          start: {
            line: 13,
            column: 2
          },
          end: {
            line: 13,
            column: 3
          }
        },
        loc: {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 38,
            column: 3
          }
        }
      },
      '2': {
        name: '(anonymous_2)',
        decl: {
          start: {
            line: 31,
            column: 10
          },
          end: {
            line: 31,
            column: 11
          }
        },
        loc: {
          start: {
            line: 31,
            column: 23
          },
          end: {
            line: 34,
            column: 5
          }
        }
      },
      '3': {
        name: '(anonymous_3)',
        decl: {
          start: {
            line: 35,
            column: 11
          },
          end: {
            line: 35,
            column: 12
          }
        },
        loc: {
          start: {
            line: 35,
            column: 20
          },
          end: {
            line: 37,
            column: 5
          }
        }
      },
      '4': {
        name: '(anonymous_4)',
        decl: {
          start: {
            line: 40,
            column: 2
          },
          end: {
            line: 40,
            column: 3
          }
        },
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 62,
            column: 3
          }
        }
      },
      '5': {
        name: '(anonymous_5)',
        decl: {
          start: {
            line: 41,
            column: 55
          },
          end: {
            line: 41,
            column: 56
          }
        },
        loc: {
          start: {
            line: 41,
            column: 66
          },
          end: {
            line: 59,
            column: 5
          }
        }
      },
      '6': {
        name: 'isLocal',
        decl: {
          start: {
            line: 65,
            column: 9
          },
          end: {
            line: 65,
            column: 16
          }
        },
        loc: {
          start: {
            line: 65,
            column: 24
          },
          end: {
            line: 69,
            column: 1
          }
        }
      }
    },
    branchMap: {
      '0': {
        loc: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        }, {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        }]
      },
      '1': {
        loc: {
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 15,
            column: 73
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }]
      },
      '2': {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        }, {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        }]
      },
      '3': {
        loc: {
          start: {
            line: 32,
            column: 6
          },
          end: {
            line: 32,
            column: 26
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 32,
            column: 6
          },
          end: {
            line: 32,
            column: 26
          }
        }, {
          start: {
            line: 32,
            column: 6
          },
          end: {
            line: 32,
            column: 26
          }
        }]
      },
      '4': {
        loc: {
          start: {
            line: 33,
            column: 6
          },
          end: {
            line: 33,
            column: 49
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 33,
            column: 6
          },
          end: {
            line: 33,
            column: 49
          }
        }, {
          start: {
            line: 33,
            column: 6
          },
          end: {
            line: 33,
            column: 49
          }
        }]
      },
      '5': {
        loc: {
          start: {
            line: 36,
            column: 6
          },
          end: {
            line: 36,
            column: 53
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 36,
            column: 6
          },
          end: {
            line: 36,
            column: 53
          }
        }, {
          start: {
            line: 36,
            column: 6
          },
          end: {
            line: 36,
            column: 53
          }
        }]
      },
      '6': {
        loc: {
          start: {
            line: 46,
            column: 23
          },
          end: {
            line: 46,
            column: 50
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }]
      },
      '7': {
        loc: {
          start: {
            line: 50,
            column: 6
          },
          end: {
            line: 52,
            column: 7
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 50,
            column: 6
          },
          end: {
            line: 52,
            column: 7
          }
        }, {
          start: {
            line: 50,
            column: 6
          },
          end: {
            line: 52,
            column: 7
          }
        }]
      },
      '8': {
        loc: {
          start: {
            line: 50,
            column: 10
          },
          end: {
            line: 50,
            column: 47
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }]
      },
      '9': {
        loc: {
          start: {
            line: 54,
            column: 6
          },
          end: {
            line: 58,
            column: 7
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 54,
            column: 6
          },
          end: {
            line: 58,
            column: 7
          }
        }, {
          start: {
            line: 54,
            column: 6
          },
          end: {
            line: 58,
            column: 7
          }
        }]
      },
      '10': {
        loc: {
          start: {
            line: 67,
            column: 9
          },
          end: {
            line: 68,
            column: 44
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }]
      }
    },
    s: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0,
      '5': 0,
      '6': 0,
      '7': 0,
      '8': 0,
      '9': 0,
      '10': 0,
      '11': 0,
      '12': 0,
      '13': 0,
      '14': 0,
      '15': 0,
      '16': 0,
      '17': 0,
      '18': 0,
      '19': 0,
      '20': 0
    },
    f: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0,
      '5': 0,
      '6': 0
    },
    b: {
      '0': [0, 0],
      '1': [0, 0, 0, 0, 0],
      '2': [0, 0],
      '3': [0, 0],
      '4': [0, 0],
      '5': [0, 0],
      '6': [0, 0],
      '7': [0, 0],
      '8': [0, 0],
      '9': [0, 0],
      '10': [0, 0]
    },
    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var cov_1gdd8a029j = function () {
  var path = '/Users/NaoyukiKanezawa/github.com/zeit/next.js/lib/link.js',
      hash = 'b7ac73188ae4e682f1ad252a554a07c97b4139b6',
      global = new Function('return this')(),
      gcv = '__coverage__',
      coverageData = {
    path: '/Users/NaoyukiKanezawa/github.com/zeit/next.js/lib/link.js',
    statementMap: {
      '0': {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 16
        }
      },
      '1': {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 50
        }
      },
      '2': {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 18,
          column: 5
        }
      },
      '3': {
        start: {
          line: 17,
          column: 6
        },
        end: {
          line: 17,
          column: 12
        }
      },
      '4': {
        start: {
          line: 20,
          column: 29
        },
        end: {
          line: 20,
          column: 39
        }
      },
      '5': {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 25,
          column: 5
        }
      },
      '6': {
        start: {
          line: 24,
          column: 6
        },
        end: {
          line: 24,
          column: 12
        }
      },
      '7': {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 22
        }
      },
      '8': {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 37,
          column: 6
        }
      },
      '9': {
        start: {
          line: 32,
          column: 6
        },
        end: {
          line: 32,
          column: 26
        }
      },
      '10': {
        start: {
          line: 32,
          column: 20
        },
        end: {
          line: 32,
          column: 26
        }
      },
      '11': {
        start: {
          line: 33,
          column: 6
        },
        end: {
          line: 33,
          column: 49
        }
      },
      '12': {
        start: {
          line: 33,
          column: 28
        },
        end: {
          line: 33,
          column: 49
        }
      },
      '13': {
        start: {
          line: 36,
          column: 6
        },
        end: {
          line: 36,
          column: 53
        }
      },
      '14': {
        start: {
          line: 36,
          column: 30
        },
        end: {
          line: 36,
          column: 53
        }
      },
      '15': {
        start: {
          line: 41,
          column: 21
        },
        end: {
          line: 59,
          column: 6
        }
      },
      '16': {
        start: {
          line: 42,
          column: 20
        },
        end: {
          line: 44,
          column: 7
        }
      },
      '17': {
        start: {
          line: 46,
          column: 23
        },
        end: {
          line: 46,
          column: 50
        }
      },
      '18': {
        start: {
          line: 50,
          column: 6
        },
        end: {
          line: 52,
          column: 7
        }
      },
      '19': {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 36
        }
      },
      '20': {
        start: {
          line: 54,
          column: 6
        },
        end: {
          line: 58,
          column: 7
        }
      },
      '21': {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 47
        }
      },
      '22': {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 40
        }
      },
      '23': {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 22
        }
      },
      '24': {
        start: {
          line: 66,
          column: 17
        },
        end: {
          line: 66,
          column: 39
        }
      },
      '25': {
        start: {
          line: 67,
          column: 2
        },
        end: {
          line: 68,
          column: 44
        }
      }
    },
    fnMap: {
      '0': {
        name: '(anonymous_0)',
        decl: {
          start: {
            line: 8,
            column: 2
          },
          end: {
            line: 8,
            column: 3
          }
        },
        loc: {
          start: {
            line: 8,
            column: 22
          },
          end: {
            line: 11,
            column: 3
          }
        }
      },
      '1': {
        name: '(anonymous_1)',
        decl: {
          start: {
            line: 13,
            column: 2
          },
          end: {
            line: 13,
            column: 3
          }
        },
        loc: {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 38,
            column: 3
          }
        }
      },
      '2': {
        name: '(anonymous_2)',
        decl: {
          start: {
            line: 31,
            column: 10
          },
          end: {
            line: 31,
            column: 11
          }
        },
        loc: {
          start: {
            line: 31,
            column: 23
          },
          end: {
            line: 34,
            column: 5
          }
        }
      },
      '3': {
        name: '(anonymous_3)',
        decl: {
          start: {
            line: 35,
            column: 11
          },
          end: {
            line: 35,
            column: 12
          }
        },
        loc: {
          start: {
            line: 35,
            column: 20
          },
          end: {
            line: 37,
            column: 5
          }
        }
      },
      '4': {
        name: '(anonymous_4)',
        decl: {
          start: {
            line: 40,
            column: 2
          },
          end: {
            line: 40,
            column: 3
          }
        },
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 62,
            column: 3
          }
        }
      },
      '5': {
        name: '(anonymous_5)',
        decl: {
          start: {
            line: 41,
            column: 55
          },
          end: {
            line: 41,
            column: 56
          }
        },
        loc: {
          start: {
            line: 41,
            column: 66
          },
          end: {
            line: 59,
            column: 5
          }
        }
      },
      '6': {
        name: 'isLocal',
        decl: {
          start: {
            line: 65,
            column: 9
          },
          end: {
            line: 65,
            column: 16
          }
        },
        loc: {
          start: {
            line: 65,
            column: 24
          },
          end: {
            line: 69,
            column: 1
          }
        }
      }
    },
    branchMap: {
      '0': {
        loc: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        }, {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        }]
      },
      '1': {
        loc: {
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 15,
            column: 73
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 14,
            column: 33
          }
        }, {
          start: {
            line: 15,
            column: 7
          },
          end: {
            line: 15,
            column: 16
          }
        }, {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 15,
            column: 29
          }
        }, {
          start: {
            line: 15,
            column: 33
          },
          end: {
            line: 15,
            column: 43
          }
        }, {
          start: {
            line: 15,
            column: 47
          },
          end: {
            line: 15,
            column: 72
          }
        }]
      },
      '2': {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        }, {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        }]
      },
      '3': {
        loc: {
          start: {
            line: 32,
            column: 6
          },
          end: {
            line: 32,
            column: 26
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 32,
            column: 6
          },
          end: {
            line: 32,
            column: 26
          }
        }, {
          start: {
            line: 32,
            column: 6
          },
          end: {
            line: 32,
            column: 26
          }
        }]
      },
      '4': {
        loc: {
          start: {
            line: 33,
            column: 6
          },
          end: {
            line: 33,
            column: 49
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 33,
            column: 6
          },
          end: {
            line: 33,
            column: 49
          }
        }, {
          start: {
            line: 33,
            column: 6
          },
          end: {
            line: 33,
            column: 49
          }
        }]
      },
      '5': {
        loc: {
          start: {
            line: 36,
            column: 6
          },
          end: {
            line: 36,
            column: 53
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 36,
            column: 6
          },
          end: {
            line: 36,
            column: 53
          }
        }, {
          start: {
            line: 36,
            column: 6
          },
          end: {
            line: 36,
            column: 53
          }
        }]
      },
      '6': {
        loc: {
          start: {
            line: 46,
            column: 23
          },
          end: {
            line: 46,
            column: 50
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: 46,
            column: 23
          },
          end: {
            line: 46,
            column: 28
          }
        }, {
          start: {
            line: 46,
            column: 32
          },
          end: {
            line: 46,
            column: 50
          }
        }]
      },
      '7': {
        loc: {
          start: {
            line: 50,
            column: 6
          },
          end: {
            line: 52,
            column: 7
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 50,
            column: 6
          },
          end: {
            line: 52,
            column: 7
          }
        }, {
          start: {
            line: 50,
            column: 6
          },
          end: {
            line: 52,
            column: 7
          }
        }]
      },
      '8': {
        loc: {
          start: {
            line: 50,
            column: 10
          },
          end: {
            line: 50,
            column: 47
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: 50,
            column: 10
          },
          end: {
            line: 50,
            column: 19
          }
        }, {
          start: {
            line: 50,
            column: 23
          },
          end: {
            line: 50,
            column: 47
          }
        }]
      },
      '9': {
        loc: {
          start: {
            line: 54,
            column: 6
          },
          end: {
            line: 58,
            column: 7
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 54,
            column: 6
          },
          end: {
            line: 58,
            column: 7
          }
        }, {
          start: {
            line: 54,
            column: 6
          },
          end: {
            line: 58,
            column: 7
          }
        }]
      },
      '10': {
        loc: {
          start: {
            line: 67,
            column: 9
          },
          end: {
            line: 68,
            column: 44
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: 67,
            column: 9
          },
          end: {
            line: 67,
            column: 35
          }
        }, {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 44
          }
        }]
      }
    },
    s: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0,
      '5': 0,
      '6': 0,
      '7': 0,
      '8': 0,
      '9': 0,
      '10': 0,
      '11': 0,
      '12': 0,
      '13': 0,
      '14': 0,
      '15': 0,
      '16': 0,
      '17': 0,
      '18': 0,
      '19': 0,
      '20': 0,
      '21': 0,
      '22': 0,
      '23': 0,
      '24': 0,
      '25': 0
    },
    f: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0,
      '5': 0,
      '6': 0
    },
    b: {
      '0': [0, 0],
      '1': [0, 0, 0, 0, 0],
      '2': [0, 0],
      '3': [0, 0],
      '4': [0, 0],
      '5': [0, 0],
      '6': [0, 0],
      '7': [0, 0],
      '8': [0, 0],
      '9': [0, 0],
      '10': [0, 0]
    },
    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Link = function (_Component) {
  (0, _inherits3.default)(Link, _Component);

  function Link(props) {
    (0, _classCallCheck3.default)(this, Link);
    ++cov_1gdd8a029j.f[0];
    ++cov_1gdd8a029j.f[0];
    ++cov_1gdd8a029j.s[0];
    ++cov_1gdd8a029j.s[0];

    var _this = (0, _possibleConstructorReturn3.default)(this, (Link.__proto__ || (0, _getPrototypeOf2.default)(Link)).call(this, props));

    ++cov_1gdd8a029j.s[1];
    ++cov_1gdd8a029j.s[1];

    _this.linkClicked = _this.linkClicked.bind(_this);
    return _this;
  }

  (0, _createClass3.default)(Link, [{
    key: 'linkClicked',
    value: function linkClicked(e) {
      var _this2 = this;

      ++cov_1gdd8a029j.f[1];
      ++cov_1gdd8a029j.f[1];
      ++cov_1gdd8a029j.s[2];
      ++cov_1gdd8a029j.s[2];

      if ((++cov_1gdd8a029j.b[1][0], (++cov_1gdd8a029j.b[1][0], e.target.nodeName === 'A')) && ((++cov_1gdd8a029j.b[1][1], (++cov_1gdd8a029j.b[1][1], e.metaKey)) || (++cov_1gdd8a029j.b[1][2], (++cov_1gdd8a029j.b[1][2], e.ctrlKey)) || (++cov_1gdd8a029j.b[1][3], (++cov_1gdd8a029j.b[1][3], e.shiftKey)) || (++cov_1gdd8a029j.b[1][4], (++cov_1gdd8a029j.b[1][4], e.nativeEvent.which === 2)))) {
        ++cov_1gdd8a029j.b[0][0];
        ++cov_1gdd8a029j.b[0][0];
        ++cov_1gdd8a029j.s[3];
        ++cov_1gdd8a029j.s[3];

        // ignore click for new tab / new window behavior
        return;
      } else {
        ++cov_1gdd8a029j.b[0][1];
        ++cov_1gdd8a029j.b[0][1];
      }

      var _ref = (++cov_1gdd8a029j.s[4], this.props),
          href = _ref.href,
          scroll = _ref.scroll;

      ++cov_1gdd8a029j.s[5];
      ++cov_1gdd8a029j.s[4];


      if (!isLocal(href)) {
        ++cov_1gdd8a029j.b[2][0];
        ++cov_1gdd8a029j.b[2][0];
        ++cov_1gdd8a029j.s[6];
        ++cov_1gdd8a029j.s[5];

        // ignore click if it's outside our scope
        return;
      } else {
        ++cov_1gdd8a029j.b[2][1];
        ++cov_1gdd8a029j.b[2][1];
      }

      ++cov_1gdd8a029j.s[7];
      ++cov_1gdd8a029j.s[6];
      e.preventDefault();

      // straight up redirect
      ++cov_1gdd8a029j.s[8];
      ++cov_1gdd8a029j.s[7];
      this.context.router.push(null, href).then(function (success) {
        ++cov_1gdd8a029j.f[2];
        ++cov_1gdd8a029j.f[2];
        ++cov_1gdd8a029j.s[9];
        ++cov_1gdd8a029j.s[8];

        if (!success) {
            ++cov_1gdd8a029j.b[3][0];
            ++cov_1gdd8a029j.b[3][0];
            ++cov_1gdd8a029j.s[10];
            ++cov_1gdd8a029j.s[9];
            return;
          } else {
          ++cov_1gdd8a029j.b[3][1];
          ++cov_1gdd8a029j.b[3][1];
        }++cov_1gdd8a029j.s[11];
        ++cov_1gdd8a029j.s[10];
        if (scroll !== false) {
            ++cov_1gdd8a029j.b[4][0];
            ++cov_1gdd8a029j.b[4][0];
            ++cov_1gdd8a029j.s[12];
            ++cov_1gdd8a029j.s[11];
            window.scrollTo(0, 0);
          } else {
          ++cov_1gdd8a029j.b[4][1];
          ++cov_1gdd8a029j.b[4][1];
        }
      }).catch(function (err) {
        ++cov_1gdd8a029j.f[3];
        ++cov_1gdd8a029j.f[3];
        ++cov_1gdd8a029j.s[13];
        ++cov_1gdd8a029j.s[12];

        if (_this2.props.onError) {
            ++cov_1gdd8a029j.b[5][0];
            ++cov_1gdd8a029j.b[5][0];
            ++cov_1gdd8a029j.s[14];
            ++cov_1gdd8a029j.s[13];
            _this2.props.onError(err);
          } else {
          ++cov_1gdd8a029j.b[5][1];
          ++cov_1gdd8a029j.b[5][1];
        }
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      ++cov_1gdd8a029j.f[4];
      ++cov_1gdd8a029j.f[4];

      var children = (++cov_1gdd8a029j.s[15], _react.Children.map(this.props.children, function (child) {
        ++cov_1gdd8a029j.f[5];
        ++cov_1gdd8a029j.f[5];

        var props = (++cov_1gdd8a029j.s[16], {
          onClick: _this3.linkClicked
        });

        var isAnchor = (++cov_1gdd8a029j.s[17], (++cov_1gdd8a029j.b[6][0], (++cov_1gdd8a029j.b[6][0], child)) && (++cov_1gdd8a029j.b[6][1], (++cov_1gdd8a029j.b[6][1], child.type === 'a')));

        // if child does not specify a href, specify it
        // so that repetition is not needed by the user
        ++cov_1gdd8a029j.s[18];
        ++cov_1gdd8a029j.s[14];
        if ((++cov_1gdd8a029j.b[8][0], (++cov_1gdd8a029j.b[8][0], !isAnchor)) || (++cov_1gdd8a029j.b[8][1], (++cov_1gdd8a029j.b[8][1], !('href' in child.props)))) {
          ++cov_1gdd8a029j.b[7][0];
          ++cov_1gdd8a029j.b[7][0];
          ++cov_1gdd8a029j.s[19];
          ++cov_1gdd8a029j.s[15];

          props.href = _this3.props.href;
        } else {
          ++cov_1gdd8a029j.b[7][1];
          ++cov_1gdd8a029j.b[7][1];
        }

        ++cov_1gdd8a029j.s[20];
        ++cov_1gdd8a029j.s[16];
        if (isAnchor) {
          ++cov_1gdd8a029j.b[9][0];
          ++cov_1gdd8a029j.b[9][0];
          ++cov_1gdd8a029j.s[21];
          ++cov_1gdd8a029j.s[17];

          return _react2.default.cloneElement(child, props);
        } else {
          ++cov_1gdd8a029j.b[9][1];
          ++cov_1gdd8a029j.b[9][1];
          ++cov_1gdd8a029j.s[22];
          ++cov_1gdd8a029j.s[18];

          return _react2.default.createElement(
            'a',
            props,
            child
          );
        }
      }));

      ++cov_1gdd8a029j.s[23];
      ++cov_1gdd8a029j.s[19];
      return children[0];
    }
  }]);
  return Link;
}(_react.Component);

Link.contextTypes = {
  router: _react.PropTypes.object
};
exports.default = Link;


function isLocal(href) {
  ++cov_1gdd8a029j.f[6];
  ++cov_1gdd8a029j.f[6];

  var origin = (++cov_1gdd8a029j.s[24], window.location.origin);
  ++cov_1gdd8a029j.s[25];
  ++cov_1gdd8a029j.s[20];
  return (++cov_1gdd8a029j.b[10][0], (++cov_1gdd8a029j.b[10][0], !/^https?:\/\//.test(href))) || (++cov_1gdd8a029j.b[10][1], (++cov_1gdd8a029j.b[10][1], origin === href.substr(0, origin.length)));
}