'use strict';

var cov_1nb4cz489x = function () {
  var path = '/Users/NaoyukiKanezawa/github.com/zeit/next.js/server/build/index.js',
      hash = '2e7783c8a1b50a5b3aac0ac890499a0114a293a9',
      global = new Function('return this')(),
      gcv = '__coverage__',
      coverageData = {
    path: '/Users/NaoyukiKanezawa/github.com/zeit/next.js/server/build/index.js',
    statementMap: {
      '0': {
        start: {
          line: 10,
          column: 2
        },
        end: {
          line: 24,
          column: 4
        }
      },
      '1': {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 23,
          column: 6
        }
      },
      '2': {
        start: {
          line: 12,
          column: 6
        },
        end: {
          line: 12,
          column: 33
        }
      },
      '3': {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 33
        }
      },
      '4': {
        start: {
          line: 15,
          column: 6
        },
        end: {
          line: 20,
          column: 7
        }
      },
      '5': {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 39
        }
      },
      '6': {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 43
        }
      },
      '7': {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 28
        }
      },
      '8': {
        start: {
          line: 22,
          column: 6
        },
        end: {
          line: 22,
          column: 15
        }
      }
    },
    fnMap: {
      '0': {
        name: 'build',
        decl: {
          start: {
            line: 4,
            column: 30
          },
          end: {
            line: 4,
            column: 35
          }
        },
        loc: {
          start: {
            line: 4,
            column: 42
          },
          end: {
            line: 25,
            column: 1
          }
        }
      },
      '1': {
        name: '(anonymous_1)',
        decl: {
          start: {
            line: 10,
            column: 21
          },
          end: {
            line: 10,
            column: 22
          }
        },
        loc: {
          start: {
            line: 10,
            column: 42
          },
          end: {
            line: 24,
            column: 3
          }
        }
      },
      '2': {
        name: '(anonymous_2)',
        decl: {
          start: {
            line: 11,
            column: 17
          },
          end: {
            line: 11,
            column: 18
          }
        },
        loc: {
          start: {
            line: 11,
            column: 33
          },
          end: {
            line: 23,
            column: 5
          }
        }
      }
    },
    branchMap: {
      '0': {
        loc: {
          start: {
            line: 12,
            column: 6
          },
          end: {
            line: 12,
            column: 33
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 12,
            column: 6
          },
          end: {
            line: 12,
            column: 33
          }
        }, {
          start: {
            line: 12,
            column: 6
          },
          end: {
            line: 12,
            column: 33
          }
        }]
      },
      '1': {
        loc: {
          start: {
            line: 15,
            column: 6
          },
          end: {
            line: 20,
            column: 7
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 15,
            column: 6
          },
          end: {
            line: 20,
            column: 7
          }
        }, {
          start: {
            line: 15,
            column: 6
          },
          end: {
            line: 20,
            column: 7
          }
        }]
      }
    },
    s: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0,
      '5': 0,
      '6': 0,
      '7': 0,
      '8': 0
    },
    f: {
      '0': 0,
      '1': 0,
      '2': 0
    },
    b: {
      '0': [0, 0],
      '1': [0, 0]
    },
    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var cov_1nb4cz489x = function () {
  var path = '/Users/NaoyukiKanezawa/github.com/zeit/next.js/server/build/index.js',
      hash = '298850bbaecd0b4b82dc5c4f0ada57c277b4eec7',
      global = new Function('return this')(),
      gcv = '__coverage__',
      coverageData = {
    path: '/Users/NaoyukiKanezawa/github.com/zeit/next.js/server/build/index.js',
    statementMap: {
      '0': {
        start: {
          line: 5,
          column: 21
        },
        end: {
          line: 8,
          column: 4
        }
      },
      '1': {
        start: {
          line: 10,
          column: 2
        },
        end: {
          line: 24,
          column: 4
        }
      },
      '2': {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 23,
          column: 6
        }
      },
      '3': {
        start: {
          line: 12,
          column: 6
        },
        end: {
          line: 12,
          column: 33
        }
      },
      '4': {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 33
        }
      },
      '5': {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 14,
          column: 38
        }
      },
      '6': {
        start: {
          line: 15,
          column: 6
        },
        end: {
          line: 20,
          column: 7
        }
      },
      '7': {
        start: {
          line: 16,
          column: 22
        },
        end: {
          line: 16,
          column: 52
        }
      },
      '8': {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 39
        }
      },
      '9': {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 43
        }
      },
      '10': {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 28
        }
      },
      '11': {
        start: {
          line: 22,
          column: 6
        },
        end: {
          line: 22,
          column: 15
        }
      }
    },
    fnMap: {
      '0': {
        name: 'build',
        decl: {
          start: {
            line: 4,
            column: 30
          },
          end: {
            line: 4,
            column: 35
          }
        },
        loc: {
          start: {
            line: 4,
            column: 42
          },
          end: {
            line: 25,
            column: 1
          }
        }
      },
      '1': {
        name: '(anonymous_1)',
        decl: {
          start: {
            line: 10,
            column: 21
          },
          end: {
            line: 10,
            column: 22
          }
        },
        loc: {
          start: {
            line: 10,
            column: 42
          },
          end: {
            line: 24,
            column: 3
          }
        }
      },
      '2': {
        name: '(anonymous_2)',
        decl: {
          start: {
            line: 11,
            column: 17
          },
          end: {
            line: 11,
            column: 18
          }
        },
        loc: {
          start: {
            line: 11,
            column: 33
          },
          end: {
            line: 23,
            column: 5
          }
        }
      }
    },
    branchMap: {
      '0': {
        loc: {
          start: {
            line: 12,
            column: 6
          },
          end: {
            line: 12,
            column: 33
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 12,
            column: 6
          },
          end: {
            line: 12,
            column: 33
          }
        }, {
          start: {
            line: 12,
            column: 6
          },
          end: {
            line: 12,
            column: 33
          }
        }]
      },
      '1': {
        loc: {
          start: {
            line: 15,
            column: 6
          },
          end: {
            line: 20,
            column: 7
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 15,
            column: 6
          },
          end: {
            line: 20,
            column: 7
          }
        }, {
          start: {
            line: 15,
            column: 6
          },
          end: {
            line: 20,
            column: 7
          }
        }]
      }
    },
    s: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0,
      '5': 0,
      '6': 0,
      '7': 0,
      '8': 0,
      '9': 0,
      '10': 0,
      '11': 0
    },
    f: {
      '0': 0,
      '1': 0,
      '2': 0
    },
    b: {
      '0': [0, 0],
      '1': [0, 0]
    },
    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

var _webpack = require('./webpack');

var _webpack2 = _interopRequireDefault(_webpack);

var _clean = require('./clean');

var _clean2 = _interopRequireDefault(_clean);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(dir) {
    var _ref2, _ref3, compiler;

    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            ++cov_1nb4cz489x.f[0];
            ++cov_1nb4cz489x.f[0];
            ++cov_1nb4cz489x.s[0];
            _context.next = 5;
            return _promise2.default.all([(0, _webpack2.default)(dir), (0, _clean2.default)(dir)]);

          case 5:
            _ref2 = _context.sent;
            _ref3 = (0, _slicedToArray3.default)(_ref2, 1);
            compiler = _ref3[0];
            ++cov_1nb4cz489x.s[1];
            ++cov_1nb4cz489x.s[0];
            return _context.abrupt('return', new _promise2.default(function (resolve, reject) {
              ++cov_1nb4cz489x.f[1];
              ++cov_1nb4cz489x.f[1];
              ++cov_1nb4cz489x.s[2];
              ++cov_1nb4cz489x.s[1];

              compiler.run(function (err, stats) {
                ++cov_1nb4cz489x.f[2];
                ++cov_1nb4cz489x.f[2];
                ++cov_1nb4cz489x.s[3];
                ++cov_1nb4cz489x.s[2];

                if (err) {
                    ++cov_1nb4cz489x.b[0][0];
                    ++cov_1nb4cz489x.b[0][0];
                    ++cov_1nb4cz489x.s[4];
                    ++cov_1nb4cz489x.s[3];
                    return reject(err);
                  } else {
                  ++cov_1nb4cz489x.b[0][1];
                  ++cov_1nb4cz489x.b[0][1];
                }var jsonStats = (++cov_1nb4cz489x.s[5], stats.toJson());
                ++cov_1nb4cz489x.s[6];
                ++cov_1nb4cz489x.s[4];
                if (jsonStats.errors.length > 0) {
                  ++cov_1nb4cz489x.b[1][0];
                  ++cov_1nb4cz489x.b[1][0];

                  var error = (++cov_1nb4cz489x.s[7], new Error(jsonStats.errors[0]));
                  ++cov_1nb4cz489x.s[8];
                  ++cov_1nb4cz489x.s[5];
                  error.errors = jsonStats.errors;
                  ++cov_1nb4cz489x.s[9];
                  ++cov_1nb4cz489x.s[6];
                  error.warnings = jsonStats.warnings;
                  ++cov_1nb4cz489x.s[10];
                  ++cov_1nb4cz489x.s[7];
                  return reject(error);
                } else {
                  ++cov_1nb4cz489x.b[1][1];
                  ++cov_1nb4cz489x.b[1][1];
                }

                ++cov_1nb4cz489x.s[11];
                ++cov_1nb4cz489x.s[8];
                resolve();
              });
            }));

          case 11:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  function build(_x) {
    return _ref.apply(this, arguments);
  }

  return build;
}();