'use strict';

var cov_27ah88z5xy = function () {
  var path = '/Users/NaoyukiKanezawa/github.com/zeit/next.js/server/read.js',
      hash = '5e0e5816c88d13bc94f24ce60b4a6fb3efaa398c',
      global = new Function('return this')(),
      gcv = '__coverage__',
      coverageData = {
    path: '/Users/NaoyukiKanezawa/github.com/zeit/next.js/server/read.js',
    statementMap: {
      '0': {
        start: {
          line: 11,
          column: 2
        },
        end: {
          line: 13,
          column: 3
        }
      },
      '1': {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 19
        }
      },
      '2': {
        start: {
          line: 16,
          column: 2
        },
        end: {
          line: 16,
          column: 17
        }
      },
      '3': {
        start: {
          line: 17,
          column: 2
        },
        end: {
          line: 17,
          column: 13
        }
      },
      '4': {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 18
        }
      }
    },
    fnMap: {
      '0': {
        name: 'read',
        decl: {
          start: {
            line: 9,
            column: 15
          },
          end: {
            line: 9,
            column: 19
          }
        },
        loc: {
          start: {
            line: 9,
            column: 27
          },
          end: {
            line: 18,
            column: 1
          }
        }
      }
    },
    branchMap: {
      '0': {
        loc: {
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 13,
            column: 3
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 13,
            column: 3
          }
        }, {
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 13,
            column: 3
          }
        }]
      }
    },
    s: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0
    },
    f: {
      '0': 0
    },
    b: {
      '0': [0, 0]
    },
    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cache = undefined;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var cov_27ah88z5xy = function () {
  var path = '/Users/NaoyukiKanezawa/github.com/zeit/next.js/server/read.js',
      hash = 'ea67b73682484815532672304542e818f01566ed',
      global = new Function('return this')(),
      gcv = '__coverage__',
      coverageData = {
    path: '/Users/NaoyukiKanezawa/github.com/zeit/next.js/server/read.js',
    statementMap: {
      '0': {
        start: {
          line: 10,
          column: 12
        },
        end: {
          line: 10,
          column: 31
        }
      },
      '1': {
        start: {
          line: 11,
          column: 2
        },
        end: {
          line: 13,
          column: 3
        }
      },
      '2': {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 19
        }
      },
      '3': {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 37
        }
      },
      '4': {
        start: {
          line: 16,
          column: 2
        },
        end: {
          line: 16,
          column: 17
        }
      },
      '5': {
        start: {
          line: 17,
          column: 2
        },
        end: {
          line: 17,
          column: 13
        }
      },
      '6': {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      '7': {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 18
        }
      }
    },
    fnMap: {
      '0': {
        name: 'read',
        decl: {
          start: {
            line: 9,
            column: 15
          },
          end: {
            line: 9,
            column: 19
          }
        },
        loc: {
          start: {
            line: 9,
            column: 27
          },
          end: {
            line: 18,
            column: 1
          }
        }
      }
    },
    branchMap: {
      '0': {
        loc: {
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 13,
            column: 3
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 13,
            column: 3
          }
        }, {
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 13,
            column: 3
          }
        }]
      }
    },
    s: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0,
      '5': 0,
      '6': 0,
      '7': 0
    },
    f: {
      '0': 0
    },
    b: {
      '0': [0, 0]
    },
    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

/**
 * resolve a file like `require.resolve`,
 * and read and cache the file content
 */

var read = function () {
  var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(path) {
    var f, data;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            ++cov_27ah88z5xy.f[0];
            ++cov_27ah88z5xy.f[0];
            ++cov_27ah88z5xy.s[0];
            _context.next = 5;
            return (0, _resolve2.default)(path);

          case 5:
            f = _context.sent;
            ++cov_27ah88z5xy.s[1];
            ++cov_27ah88z5xy.s[0];

            if (!cache.hasOwnProperty(f)) {
              _context.next = 16;
              break;
            }

            ++cov_27ah88z5xy.b[0][0];
            ++cov_27ah88z5xy.b[0][0];
            ++cov_27ah88z5xy.s[2];
            ++cov_27ah88z5xy.s[1];
            return _context.abrupt('return', cache[f]);

          case 16:
            ++cov_27ah88z5xy.b[0][1];
            ++cov_27ah88z5xy.b[0][1];

          case 18:
            data = (++cov_27ah88z5xy.s[3], _fs2.default.readFile(f, 'utf8'));
            ++cov_27ah88z5xy.s[4];
            ++cov_27ah88z5xy.s[2];

            cache[f] = data;
            ++cov_27ah88z5xy.s[5];
            ++cov_27ah88z5xy.s[3];
            return _context.abrupt('return', data);

          case 25:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function read(_x) {
    return _ref.apply(this, arguments);
  };
}();

var _fs = require('mz/fs');

var _fs2 = _interopRequireDefault(_fs);

var _resolve = require('./resolve');

var _resolve2 = _interopRequireDefault(_resolve);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = read;
var cache = exports.cache = (++cov_27ah88z5xy.s[6], {});

++cov_27ah88z5xy.s[7];
++cov_27ah88z5xy.s[4];
read.cache = cache;