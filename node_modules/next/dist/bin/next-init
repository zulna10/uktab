#!/usr/bin/env node
'use strict';

var cov_1fgo93jpua = function () {
  var path = '/Users/NaoyukiKanezawa/github.com/zeit/next.js/bin/next-init',
      hash = '02c2613f9f3cc9bdb97147275d7cc7db4e632a25',
      global = new Function('return this')(),
      gcv = '__coverage__',
      coverageData = {
    path: '/Users/NaoyukiKanezawa/github.com/zeit/next.js/bin/next-init',
    statementMap: {
      '0': {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 19,
          column: 1
        }
      },
      '1': {
        start: {
          line: 17,
          column: 2
        },
        end: {
          line: 17,
          column: 120
        }
      },
      '2': {
        start: {
          line: 18,
          column: 2
        },
        end: {
          line: 18,
          column: 17
        }
      },
      '3': {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 43,
          column: 2
        }
      },
      '4': {
        start: {
          line: 23,
          column: 2
        },
        end: {
          line: 25,
          column: 3
        }
      },
      '5': {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 21
        }
      },
      '6': {
        start: {
          line: 27,
          column: 2
        },
        end: {
          line: 29,
          column: 3
        }
      },
      '7': {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 93
        }
      },
      '8': {
        start: {
          line: 31,
          column: 2
        },
        end: {
          line: 33,
          column: 3
        }
      },
      '9': {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 36
        }
      },
      '10': {
        start: {
          line: 35,
          column: 2
        },
        end: {
          line: 38,
          column: 3
        }
      },
      '11': {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 35
        }
      },
      '12': {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 61
        }
      },
      '13': {
        start: {
          line: 41,
          column: 2
        },
        end: {
          line: 41,
          column: 20
        }
      },
      '14': {
        start: {
          line: 42,
          column: 2
        },
        end: {
          line: 42,
          column: 17
        }
      }
    },
    fnMap: {
      '0': {
        name: '(anonymous_0)',
        decl: {
          start: {
            line: 22,
            column: 6
          },
          end: {
            line: 22,
            column: 7
          }
        },
        loc: {
          start: {
            line: 22,
            column: 23
          },
          end: {
            line: 39,
            column: 1
          }
        }
      },
      '1': {
        name: '(anonymous_1)',
        decl: {
          start: {
            line: 40,
            column: 7
          },
          end: {
            line: 40,
            column: 8
          }
        },
        loc: {
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 43,
            column: 1
          }
        }
      }
    },
    branchMap: {
      '0': {
        loc: {
          start: {
            line: 14,
            column: 20
          },
          end: {
            line: 14,
            column: 36
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }]
      },
      '1': {
        loc: {
          start: {
            line: 16,
            column: 0
          },
          end: {
            line: 19,
            column: 1
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 16,
            column: 0
          },
          end: {
            line: 19,
            column: 1
          }
        }, {
          start: {
            line: 16,
            column: 0
          },
          end: {
            line: 19,
            column: 1
          }
        }]
      },
      '2': {
        loc: {
          start: {
            line: 23,
            column: 2
          },
          end: {
            line: 25,
            column: 3
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 23,
            column: 2
          },
          end: {
            line: 25,
            column: 3
          }
        }, {
          start: {
            line: 23,
            column: 2
          },
          end: {
            line: 25,
            column: 3
          }
        }]
      },
      '3': {
        loc: {
          start: {
            line: 27,
            column: 2
          },
          end: {
            line: 29,
            column: 3
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 27,
            column: 2
          },
          end: {
            line: 29,
            column: 3
          }
        }, {
          start: {
            line: 27,
            column: 2
          },
          end: {
            line: 29,
            column: 3
          }
        }]
      },
      '4': {
        loc: {
          start: {
            line: 31,
            column: 2
          },
          end: {
            line: 33,
            column: 3
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 31,
            column: 2
          },
          end: {
            line: 33,
            column: 3
          }
        }, {
          start: {
            line: 31,
            column: 2
          },
          end: {
            line: 33,
            column: 3
          }
        }]
      },
      '5': {
        loc: {
          start: {
            line: 35,
            column: 2
          },
          end: {
            line: 38,
            column: 3
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 35,
            column: 2
          },
          end: {
            line: 38,
            column: 3
          }
        }, {
          start: {
            line: 35,
            column: 2
          },
          end: {
            line: 38,
            column: 3
          }
        }]
      }
    },
    s: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0,
      '5': 0,
      '6': 0,
      '7': 0,
      '8': 0,
      '9': 0,
      '10': 0,
      '11': 0,
      '12': 0,
      '13': 0,
      '14': 0
    },
    f: {
      '0': 0,
      '1': 0
    },
    b: {
      '0': [0, 0],
      '1': [0, 0],
      '2': [0, 0],
      '3': [0, 0],
      '4': [0, 0],
      '5': [0, 0]
    },
    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var cov_1fgo93jpua = function () {
  var path = '/Users/NaoyukiKanezawa/github.com/zeit/next.js/bin/next-init',
      hash = '787fe96609e59ca034be4abbcfe827bb8633838f',
      global = new Function('return this')(),
      gcv = '__coverage__',
      coverageData = {
    path: '/Users/NaoyukiKanezawa/github.com/zeit/next.js/bin/next-init',
    statementMap: {
      '0': {
        start: {
          line: 7,
          column: 13
        },
        end: {
          line: 12,
          column: 2
        }
      },
      '1': {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 14,
          column: 37
        }
      },
      '2': {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 19,
          column: 1
        }
      },
      '3': {
        start: {
          line: 17,
          column: 2
        },
        end: {
          line: 17,
          column: 120
        }
      },
      '4': {
        start: {
          line: 18,
          column: 2
        },
        end: {
          line: 18,
          column: 17
        }
      },
      '5': {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 43,
          column: 2
        }
      },
      '6': {
        start: {
          line: 23,
          column: 2
        },
        end: {
          line: 25,
          column: 3
        }
      },
      '7': {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 21
        }
      },
      '8': {
        start: {
          line: 27,
          column: 2
        },
        end: {
          line: 29,
          column: 3
        }
      },
      '9': {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 93
        }
      },
      '10': {
        start: {
          line: 31,
          column: 2
        },
        end: {
          line: 33,
          column: 3
        }
      },
      '11': {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 36
        }
      },
      '12': {
        start: {
          line: 35,
          column: 2
        },
        end: {
          line: 38,
          column: 3
        }
      },
      '13': {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 35
        }
      },
      '14': {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 61
        }
      },
      '15': {
        start: {
          line: 41,
          column: 2
        },
        end: {
          line: 41,
          column: 20
        }
      },
      '16': {
        start: {
          line: 42,
          column: 2
        },
        end: {
          line: 42,
          column: 17
        }
      },
      '17': {
        start: {
          line: 45,
          column: 20
        },
        end: {
          line: 56,
          column: 2
        }
      },
      '18': {
        start: {
          line: 58,
          column: 17
        },
        end: {
          line: 61,
          column: 1
        }
      }
    },
    fnMap: {
      '0': {
        name: '(anonymous_0)',
        decl: {
          start: {
            line: 22,
            column: 6
          },
          end: {
            line: 22,
            column: 7
          }
        },
        loc: {
          start: {
            line: 22,
            column: 23
          },
          end: {
            line: 39,
            column: 1
          }
        }
      },
      '1': {
        name: '(anonymous_1)',
        decl: {
          start: {
            line: 40,
            column: 7
          },
          end: {
            line: 40,
            column: 8
          }
        },
        loc: {
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 43,
            column: 1
          }
        }
      }
    },
    branchMap: {
      '0': {
        loc: {
          start: {
            line: 14,
            column: 20
          },
          end: {
            line: 14,
            column: 36
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: 14,
            column: 20
          },
          end: {
            line: 14,
            column: 29
          }
        }, {
          start: {
            line: 14,
            column: 33
          },
          end: {
            line: 14,
            column: 36
          }
        }]
      },
      '1': {
        loc: {
          start: {
            line: 16,
            column: 0
          },
          end: {
            line: 19,
            column: 1
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 16,
            column: 0
          },
          end: {
            line: 19,
            column: 1
          }
        }, {
          start: {
            line: 16,
            column: 0
          },
          end: {
            line: 19,
            column: 1
          }
        }]
      },
      '2': {
        loc: {
          start: {
            line: 23,
            column: 2
          },
          end: {
            line: 25,
            column: 3
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 23,
            column: 2
          },
          end: {
            line: 25,
            column: 3
          }
        }, {
          start: {
            line: 23,
            column: 2
          },
          end: {
            line: 25,
            column: 3
          }
        }]
      },
      '3': {
        loc: {
          start: {
            line: 27,
            column: 2
          },
          end: {
            line: 29,
            column: 3
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 27,
            column: 2
          },
          end: {
            line: 29,
            column: 3
          }
        }, {
          start: {
            line: 27,
            column: 2
          },
          end: {
            line: 29,
            column: 3
          }
        }]
      },
      '4': {
        loc: {
          start: {
            line: 31,
            column: 2
          },
          end: {
            line: 33,
            column: 3
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 31,
            column: 2
          },
          end: {
            line: 33,
            column: 3
          }
        }, {
          start: {
            line: 31,
            column: 2
          },
          end: {
            line: 33,
            column: 3
          }
        }]
      },
      '5': {
        loc: {
          start: {
            line: 35,
            column: 2
          },
          end: {
            line: 38,
            column: 3
          }
        },
        type: 'if',
        locations: [{
          start: {
            line: 35,
            column: 2
          },
          end: {
            line: 38,
            column: 3
          }
        }, {
          start: {
            line: 35,
            column: 2
          },
          end: {
            line: 38,
            column: 3
          }
        }]
      }
    },
    s: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0,
      '5': 0,
      '6': 0,
      '7': 0,
      '8': 0,
      '9': 0,
      '10': 0,
      '11': 0,
      '12': 0,
      '13': 0,
      '14': 0,
      '15': 0,
      '16': 0,
      '17': 0,
      '18': 0
    },
    f: {
      '0': 0,
      '1': 0
    },
    b: {
      '0': [0, 0],
      '1': [0, 0],
      '2': [0, 0],
      '3': [0, 0],
      '4': [0, 0],
      '5': [0, 0]
    },
    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

var _path = require('path');

var _minimist = require('minimist');

var _minimist2 = _interopRequireDefault(_minimist);

var _fs = require('mz/fs');

var _mkdirpThen = require('mkdirp-then');

var _mkdirpThen2 = _interopRequireDefault(_mkdirpThen);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var argv = (++cov_1fgo93jpua.s[0], (0, _minimist2.default)(process.argv.slice(2), {
  alias: {
    h: 'help'
  },
  boolean: ['h']
}));

var dir = (++cov_1fgo93jpua.s[1], (0, _path.resolve)((++cov_1fgo93jpua.b[0][0], (++cov_1fgo93jpua.b[0][0], argv._[0])) || (++cov_1fgo93jpua.b[0][1], (++cov_1fgo93jpua.b[0][1], '.'))));

++cov_1fgo93jpua.s[2];
++cov_1fgo93jpua.s[0];
if ((0, _path.basename)(dir) === 'pages') {
  ++cov_1fgo93jpua.b[1][0];
  ++cov_1fgo93jpua.b[1][0];
  ++cov_1fgo93jpua.s[3];
  ++cov_1fgo93jpua.s[1];

  console.warn('Your root directory is named "pages". This looks suspicious. You probably want to go one directory up.');
  ++cov_1fgo93jpua.s[4];
  ++cov_1fgo93jpua.s[2];
  process.exit(1);
} else {
  ++cov_1fgo93jpua.b[1][1];
  ++cov_1fgo93jpua.b[1][1];
}

++cov_1fgo93jpua.s[5];
++cov_1fgo93jpua.s[3];
(0, _fs.exists)(dir).then(function () {
  var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(present) {
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            ++cov_1fgo93jpua.f[0];
            ++cov_1fgo93jpua.f[0];
            ++cov_1fgo93jpua.s[6];
            ++cov_1fgo93jpua.s[4];

            if (present) {
              _context.next = 13;
              break;
            }

            ++cov_1fgo93jpua.b[2][0];
            ++cov_1fgo93jpua.b[2][0];
            ++cov_1fgo93jpua.s[7];
            ++cov_1fgo93jpua.s[5];
            _context.next = 11;
            return (0, _mkdirpThen2.default)(dir);

          case 11:
            _context.next = 15;
            break;

          case 13:
            ++cov_1fgo93jpua.b[2][1];
            ++cov_1fgo93jpua.b[2][1];

          case 15:
            ++cov_1fgo93jpua.s[8];
            ++cov_1fgo93jpua.s[6];
            _context.next = 19;
            return (0, _fs.exists)((0, _path.join)(dir, 'package.json'));

          case 19:
            if (_context.sent) {
              _context.next = 28;
              break;
            }

            ++cov_1fgo93jpua.b[3][0];
            ++cov_1fgo93jpua.b[3][0];
            ++cov_1fgo93jpua.s[9];
            ++cov_1fgo93jpua.s[7];
            _context.next = 26;
            return (0, _fs.writeFile)((0, _path.join)(dir, 'package.json'), basePackage.replace(/my-app/g, (0, _path.basename)(dir)));

          case 26:
            _context.next = 30;
            break;

          case 28:
            ++cov_1fgo93jpua.b[3][1];
            ++cov_1fgo93jpua.b[3][1];

          case 30:
            ++cov_1fgo93jpua.s[10];
            ++cov_1fgo93jpua.s[8];
            _context.next = 34;
            return (0, _fs.exists)((0, _path.join)(dir, 'static'));

          case 34:
            if (_context.sent) {
              _context.next = 43;
              break;
            }

            ++cov_1fgo93jpua.b[4][0];
            ++cov_1fgo93jpua.b[4][0];
            ++cov_1fgo93jpua.s[11];
            ++cov_1fgo93jpua.s[9];
            _context.next = 41;
            return (0, _fs.mkdir)((0, _path.join)(dir, 'static'));

          case 41:
            _context.next = 45;
            break;

          case 43:
            ++cov_1fgo93jpua.b[4][1];
            ++cov_1fgo93jpua.b[4][1];

          case 45:
            ++cov_1fgo93jpua.s[12];
            ++cov_1fgo93jpua.s[10];
            _context.next = 49;
            return (0, _fs.exists)((0, _path.join)(dir, 'pages'));

          case 49:
            if (_context.sent) {
              _context.next = 62;
              break;
            }

            ++cov_1fgo93jpua.b[5][0];
            ++cov_1fgo93jpua.b[5][0];
            ++cov_1fgo93jpua.s[13];
            ++cov_1fgo93jpua.s[11];
            _context.next = 56;
            return (0, _fs.mkdir)((0, _path.join)(dir, 'pages'));

          case 56:
            ++cov_1fgo93jpua.s[14];
            ++cov_1fgo93jpua.s[12];
            _context.next = 60;
            return (0, _fs.writeFile)((0, _path.join)(dir, 'pages', 'index.js'), basePage);

          case 60:
            _context.next = 64;
            break;

          case 62:
            ++cov_1fgo93jpua.b[5][1];
            ++cov_1fgo93jpua.b[5][1];

          case 64:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, undefined);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}()).catch(function (err) {
  ++cov_1fgo93jpua.f[1];
  ++cov_1fgo93jpua.f[1];
  ++cov_1fgo93jpua.s[15];
  ++cov_1fgo93jpua.s[13];

  console.error(err);
  ++cov_1fgo93jpua.s[16];
  ++cov_1fgo93jpua.s[14];
  process.exit(1);
});

var basePackage = (++cov_1fgo93jpua.s[17], '{\n  "name": "my-app",\n  "description": "",\n  "dependencies": {\n    "next": "latest"\n  },\n  "scripts": {\n    "dev": "next",\n    "build": "next build",\n    "start": "next start"\n  }\n}');

var basePage = (++cov_1fgo93jpua.s[18], '\nimport React from \'react\'\nexport default () => <p>Hello, world</p>\n');