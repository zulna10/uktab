#!/usr/bin/env node
'use strict';

var cov_1a1a6li199 = function () {
  var path = '/Users/NaoyukiKanezawa/github.com/zeit/next.js/bin/next-start',
      hash = '0394589d2ffeaf446f5cdd73b8f29b3e89379928',
      global = new Function('return this')(),
      gcv = '__coverage__',
      coverageData = {
    path: '/Users/NaoyukiKanezawa/github.com/zeit/next.js/bin/next-start',
    statementMap: {
      '0': {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 28,
          column: 2
        }
      },
      '1': {
        start: {
          line: 23,
          column: 2
        },
        end: {
          line: 23,
          column: 57
        }
      },
      '2': {
        start: {
          line: 26,
          column: 2
        },
        end: {
          line: 26,
          column: 20
        }
      },
      '3': {
        start: {
          line: 27,
          column: 2
        },
        end: {
          line: 27,
          column: 17
        }
      }
    },
    fnMap: {
      '0': {
        name: '(anonymous_0)',
        decl: {
          start: {
            line: 22,
            column: 6
          },
          end: {
            line: 22,
            column: 7
          }
        },
        loc: {
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 24,
            column: 1
          }
        }
      },
      '1': {
        name: '(anonymous_1)',
        decl: {
          start: {
            line: 25,
            column: 7
          },
          end: {
            line: 25,
            column: 8
          }
        },
        loc: {
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 28,
            column: 1
          }
        }
      }
    },
    branchMap: {
      '0': {
        loc: {
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 36
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }]
      }
    },
    s: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0
    },
    f: {
      '0': 0,
      '1': 0
    },
    b: {
      '0': [0, 0]
    },
    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

var cov_1a1a6li199 = function () {
  var path = '/Users/NaoyukiKanezawa/github.com/zeit/next.js/bin/next-start',
      hash = '7020cf78add0fa6b1f71657e40b4ec0d158c68bb',
      global = new Function('return this')(),
      gcv = '__coverage__',
      coverageData = {
    path: '/Users/NaoyukiKanezawa/github.com/zeit/next.js/bin/next-start',
    statementMap: {
      '0': {
        start: {
          line: 7,
          column: 13
        },
        end: {
          line: 16,
          column: 2
        }
      },
      '1': {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 37
        }
      },
      '2': {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 31
        }
      },
      '3': {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 28,
          column: 2
        }
      },
      '4': {
        start: {
          line: 23,
          column: 2
        },
        end: {
          line: 23,
          column: 57
        }
      },
      '5': {
        start: {
          line: 26,
          column: 2
        },
        end: {
          line: 26,
          column: 20
        }
      },
      '6': {
        start: {
          line: 27,
          column: 2
        },
        end: {
          line: 27,
          column: 17
        }
      }
    },
    fnMap: {
      '0': {
        name: '(anonymous_0)',
        decl: {
          start: {
            line: 22,
            column: 6
          },
          end: {
            line: 22,
            column: 7
          }
        },
        loc: {
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 24,
            column: 1
          }
        }
      },
      '1': {
        name: '(anonymous_1)',
        decl: {
          start: {
            line: 25,
            column: 7
          },
          end: {
            line: 25,
            column: 8
          }
        },
        loc: {
          start: {
            line: 25,
            column: 16
          },
          end: {
            line: 28,
            column: 1
          }
        }
      }
    },
    branchMap: {
      '0': {
        loc: {
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 36
          }
        },
        type: 'binary-expr',
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 29
          }
        }, {
          start: {
            line: 18,
            column: 33
          },
          end: {
            line: 18,
            column: 36
          }
        }]
      }
    },
    s: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0,
      '5': 0,
      '6': 0
    },
    f: {
      '0': 0,
      '1': 0
    },
    b: {
      '0': [0, 0]
    },
    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

var _path = require('path');

var _minimist = require('minimist');

var _minimist2 = _interopRequireDefault(_minimist);

var _server = require('../server');

var _server2 = _interopRequireDefault(_server);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var argv = (++cov_1a1a6li199.s[0], (0, _minimist2.default)(process.argv.slice(2), {
  alias: {
    h: 'help',
    p: 'port'
  },
  boolean: ['h'],
  default: {
    p: 3000
  }
}));

var dir = (++cov_1a1a6li199.s[1], (0, _path.resolve)((++cov_1a1a6li199.b[0][0], (++cov_1a1a6li199.b[0][0], argv._[0])) || (++cov_1a1a6li199.b[0][1], (++cov_1a1a6li199.b[0][1], '.'))));

var srv = (++cov_1a1a6li199.s[2], new _server2.default({ dir: dir }));
++cov_1a1a6li199.s[3];
++cov_1a1a6li199.s[0];
srv.start(argv.port).then(function () {
  ++cov_1a1a6li199.f[0];
  ++cov_1a1a6li199.f[0];
  ++cov_1a1a6li199.s[4];
  ++cov_1a1a6li199.s[1];

  console.log('> Ready on http://localhost:' + argv.port);
}).catch(function (err) {
  ++cov_1a1a6li199.f[1];
  ++cov_1a1a6li199.f[1];
  ++cov_1a1a6li199.s[5];
  ++cov_1a1a6li199.s[2];

  console.error(err);
  ++cov_1a1a6li199.s[6];
  ++cov_1a1a6li199.s[3];
  process.exit(1);
});